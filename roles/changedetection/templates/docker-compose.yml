services:
  changedetection:
    container_name: "{{ service_name }}"
    image: ghcr.io/dgtlmoon/changedetection.io
    hostname: "{{ service_name }}"
    restart: unless-stopped
    labels:
      traefik.enable: "true"
      traefik.http.routers.changedetection.rule: "Host(`changedetection.{{ public_domain }}`) && {{ traefik_internal_client_ip_v3 }}"
      traefik.http.services.changedetection.loadbalancer.server.port: "5000"
    networks:
      - "{{ traefik_network_name }}"
    environment:
      BASE_URL: "https://changedetection.{{ public_domain }}"
      LOGGER_LEVEL: info
      TZ: "Europe/Berlin"
    volumes:
      - "{{ changedetection_dir }}:/datastore"

# If WEBDRIVER or PLAYWRIGHT are enabled, changedetection container depends on that
# and must wait before starting (substitute "browser-chrome" with "playwright-chrome" if last one is used)
#      depends_on:
#          sockpuppetbrowser:
#              condition: service_started

# Sockpuppetbrowser is basically chrome wrapped in an API for allowing fast fetching of web-pages.
# RECOMMENDED FOR FETCHING PAGES WITH CHROME, be sure to enable the "PLAYWRIGHT_DRIVER_URL" env variable in the main changedetection container
#  browser-sockpuppet-chrome:
#      hostname: browser-sockpuppet-chrome
#      image: dgtlmoon/sockpuppetbrowser:latest
#      cap_add:
#          - SYS_ADMIN
## SYS_ADMIN might be too much, but it can be needed on your platform https://github.com/puppeteer/puppeteer/blob/main/docs/troubleshooting.md#running-puppeteer-on-gitlabci
#        restart: unless-stopped
#        environment:
#            - SCREEN_WIDTH=1920
#            - SCREEN_HEIGHT=1024
#            - SCREEN_DEPTH=16
#            - MAX_CONCURRENT_CHROME_PROCESSES=10

# Used for fetching pages via Playwright+Chrome where you need Javascript support.
# Note: Works well but is deprecated, does not fetch full page screenshots (doesnt work with Visual Selector)
#       Does not report status codes (200, 404, 403) and other issues
#    browser-selenium-chrome:
#        hostname: browser-selenium-chrome
#        image: selenium/standalone-chrome:4
#        environment:
#            - VNC_NO_PASSWORD=1
#            - SCREEN_WIDTH=1920
#            - SCREEN_HEIGHT=1080
#            - SCREEN_DEPTH=24
#          CHROME_OPTIONS: |
#            --window-size=1280,1024
#            --headless
#            --disable-gpu
#        volumes:
#            # Workaround to avoid the browser crashing inside a docker container
#            # See https://github.com/SeleniumHQ/docker-selenium#quick-start
#            - /dev/shm:/dev/shm
#        restart: unless-stopped

networks:
  traefik:
    external: true
