---
- name: "Ensure the config subfolder for {{ service_name }} exists"
  file:
    path: "{{ resticker_dir }}"
    state: directory
    owner: "{{ docker_container_puid | int }}"
    group: "{{ docker_container_pgid | int }}"

- name: "Ensure .env file for {{ service_name }} exists"
  template:
    src: .env.j2
    dest: "{{ resticker_dir }}/.env"
    owner: "{{ docker_container_puid | int }}"
    group: "{{ docker_container_pgid | int }}"

- name: Make sure restic backup is running
  docker_compose:
    project_name: "{{ service_name }}"
    pull: true
    definition:
      version: "3.3"

      services:
        backup:
          container_name: "{{ service_name }}-backup"
          image: mazzolino/restic:1.7.0
          restart: unless-stopped
          hostname: "{{ hostname }}"
          environment:
            RUN_ON_STARTUP: "true"
            BACKUP_CRON: "0 30 3 * * *"
            RESTIC_BACKUP_SOURCES: /backup
            RESTIC_BACKUP_ARGS: >-
              --verbose
            RESTIC_FORGET_ARGS: >-
              --keep-last 10
              --keep-daily 7
              --keep-weekly 5
              --keep-monthly 12
            PRE_COMMANDS: |-
              docker exec paperless-ngx-db pg_dump -U paperless paperless > /backup/paperless/paperless.sql
              docker exec paperless-ngx-db pg_dumpall -U paperless --globals-only > /backup/paperless/paperless-postgres-globals.sql
            POST_COMMANDS_SUCCESS: |-
              curl -fsS -m 10 --data-raw "$$(docker logs resticker-backup --since 1h)" https://hc-ping.com/{{ vault_resticker_healthcheck_id }}
            POST_COMMANDS_FAILURE: |-
              curl -fsS -m 10 --data-raw "$$(docker logs resticker-backup --since 1h)" https://hc-ping.com/{{ vault_resticker_healthcheck_id }}/fail
            POST_COMMANDS_INCOMPLETE: |-
              curl -fsS -m 10 --data-raw "$$(docker logs resticker-backup --since 1h)" https://hc-ping.com/{{ vault_resticker_healthcheck_id }}/fail
          env_file:
            - "{{ resticker_dir }}/.env"
          volumes:
            - "{{ docker_container_data_root }}/paperless-ngx/app/media:/backup/paperless/media:ro"
            - /var/run/docker.sock:/var/run/docker.sock

        prune:
          container_name: "{{ service_name }}-prune"
          image: mazzolino/restic:1.7.0
          restart: unless-stopped
          hostname: "{{ hostname }}"
          environment:
            RUN_ON_STARTUP: "false"
            PRUNE_CRON: "0 0 4 * * *"
          env_file:
            - "{{ resticker_dir }}/.env"

        check:
          container_name: "{{ service_name }}-check"
          image: mazzolino/restic:1.7.0
          restart: unless-stopped
          hostname: "{{ hostname }}"
          environment:
            RUN_ON_STARTUP: "false"
            CHECK_CRON: "0 15 5 * * *"
            RESTIC_CHECK_ARGS: >-
              --read-data-subset=10%
          env_file:
            - "{{ resticker_dir }}/.env"
