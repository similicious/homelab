services:
  broker:
    container_name: "{{ service_name }}-broker"
    image: docker.io/library/redis:8
    restart: unless-stopped
    volumes:
      - "{{ paperless_redis_data_dir }}:/data"
    networks:
      - app

  app:
    container_name: "{{ service_name }}-app"
    image: ghcr.io/paperless-ngx/paperless-ngx
    restart: unless-stopped
    depends_on:
      - broker
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - "{{ paperless_app_data_dir }}:/usr/src/paperless/data"
      - "{{ paperless_app_media_dir }}:/usr/src/paperless/media"
      - "{{ paperless_app_export_dir }}:/usr/src/paperless/export"
      - "{{ paperless_app_consume_dir }}/:/usr/src/paperless/consume"
    environment:
      COMPOSE_PROJECT_NAME: "{{ service_name }}"
      PAPERLESS_REDIS: redis://broker:6379
      PAPERLESS_DBHOST: db
      PAPERLESS_DBUSER: paperless
      PAPERLESS_DBPASS: "{{ vault_postgres_password }}"
      USERMAP_UID: "{{ docker_container_puid }}"
      USERMAP_GID: "{{ docker_container_pgid }}"
      PAPERLESS_FILENAME_FORMAT: "{% raw %}{{created_year}}/{{correspondent}}/{{created}} - {{title}}{% endraw %}"
      PAPERLESS_OCR_LANGUAGE: "deu+eng"
      PAPERLESS_URL: "https://paperless.{{ public_domain }}"
      PAPERLESS_ENABLE_HTTP_REMOTE_USER: "true"
      PAPERLESS_IGNORE_DATES: "{{ vault_paperless_birthdate }}"
    labels:
      traefik.enable: "true"
      traefik.http.routers.paperless.rule: "Host(`paperless.{{ public_domain }}`) && {{ traefik_internal_client_ip_v3 }}"
      traefik.http.routers.paperless.middlewares: "authelia@docker"
      traefik.docker.network: "{{ traefik_network_name }}"
    networks:
      - app
      - traefik

  db:
    image: docker.io/library/postgres:17
    container_name: "{{ service_name }}-db"
    restart: unless-stopped
    volumes:
      - "{{ paperless_postgres_data_dir }}:/var/lib/postgresql/data"
    environment:
      POSTGRES_DB: paperless
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD: "{{ vault_postgres_password }}"
    networks:
      - app

networks:
  app:
  traefik:
    external: true
