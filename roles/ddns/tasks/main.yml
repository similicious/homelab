---
- name: "Ensure the {{ service_name }} config directory for services exist"
  file:
    path: "{{ ddns_config_dir }}"
    state: directory
    owner: "{{ docker_container_puid | int }}"
    group: "{{ docker_container_pgid | int }}"

- name: "Ensure the {{ service_name }} config is present"
  ansible.builtin.template:
    src: config.json
    dest: "{{ ddns_config_file }}"
    owner: "{{ docker_container_puid | int }}"
    group: "{{ docker_container_pgid | int }}"

- name: "Ensure {{ service_name }} is running as a docker container"
  community.docker.docker_container:
    name: "{{ service_name }}"
    image: qmcgaw/ddns-updater
    volumes:
      - "{{ ddns_config_dir }}:/updater/data"
    restart_policy: unless-stopped
    labels:
      traefik.enable: "true"
      traefik.http.routers.ddns.rule: "Host(`{{ service_name }}.{{ public_domain }}`) && {{ traefik_internal_client_ip_v3 }}"
      traefik.http.services.ddns.loadbalancer.server.port: "8000"
      traefik.docker.network: "{{ traefik_network_name }}"
    networks:
      - name: "{{ traefik_network_name }}"
    env:
      RESOLVER_ADDRESS: "9.9.9.9:53"
    healthcheck:
      # The "NONE" check needs to be specified
      test: ["NONE"]
