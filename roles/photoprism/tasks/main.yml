---
- name: "Ensure the {{ service_name }} stack is running"
  docker_compose:
    project_name: "{{ service_name }}"
    definition:
      version: '3.5'

      # Example Docker Compose config file for PhotoPrism (Linux / AMD64)
      #
      # Note:
      # - Running PhotoPrism on a server with less than 4 GB of swap space or setting a memory/swap limit can cause unexpected
      #   restarts ("crashes"), for example, when the indexer temporarily needs more memory to process large files.
      # - If you install PhotoPrism on a public server outside your home network, please always run it behind a secure
      #   HTTPS reverse proxy such as Traefik or Caddy. Your files and passwords will otherwise be transmitted
      #   in clear text and can be intercepted by anyone, including your provider, hackers, and governments:
      #   https://docs.photoprism.app/getting-started/proxies/traefik/
      #
      # Documentation : https://docs.photoprism.app/getting-started/docker-compose/
      # Docker Hub URL: https://hub.docker.com/r/photoprism/photoprism/
      #
      # DOCKER COMPOSE COMMAND REFERENCE
      # see https://docs.photoprism.app/getting-started/docker-compose/#command-line-interface
      # --------------------------------------------------------------------------
      # Start    | docker-compose up -d
      # Stop     | docker-compose stop
      # Update   | docker-compose pull
      # Logs     | docker-compose logs --tail=25 -f
      # Terminal | docker-compose exec photoprism bash
      # Help     | docker-compose exec photoprism photoprism help
      # Config   | docker-compose exec photoprism photoprism config
      # Reset    | docker-compose exec photoprism photoprism reset
      # Backup   | docker-compose exec photoprism photoprism backup -a -i
      # Restore  | docker-compose exec photoprism photoprism restore -a -i
      # Index    | docker-compose exec photoprism photoprism index
      # Reindex  | docker-compose exec photoprism photoprism index -f
      # Import   | docker-compose exec photoprism photoprism import
      #
      # To search originals for faces without a complete rescan:
      # docker-compose exec photoprism photoprism faces index
      #
      # All commands may have to be prefixed with "sudo" when not running as root.
      # This will point the home directory shortcut ~ to /root in volume mounts.

      services:
        photoprism:
          container_name: "{{ service_name }}-app"
          image: photoprism/photoprism:latest
          depends_on:
            - db
          # restart: unless-stopped
          security_opt:
            - seccomp:unconfined
            - apparmor:unconfined
          environment:
            PHOTOPRISM_ADMIN_PASSWORD: "{{ vault_photoprism_admin_password }}"          # !!! PLEASE CHANGE YOUR INITIAL "admin" PASSWORD !!!
            PHOTOPRISM_SITE_URL: "http://{{ service_name }}.jerry" # public server URL incl http:// or https:// and /path, :port is optional
            PHOTOPRISM_ORIGINALS_LIMIT: 5000               # file size limit for originals in MB (increase for high-res video)
            PHOTOPRISM_HTTP_COMPRESSION: "gzip"            # improves transfer speed and bandwidth utilization (none or gzip)
            PHOTOPRISM_DEBUG: "false"                      # run in debug mode (shows additional log messages)
            PHOTOPRISM_PUBLIC: "false"                     # no authentication required (disables password protection)
            PHOTOPRISM_READONLY: "false"                   # don't modify originals directory (reduced functionality)
            PHOTOPRISM_EXPERIMENTAL: "false"               # enables experimental features
            PHOTOPRISM_DISABLE_CHOWN: "false"              # disables storage permission updates on startup
            PHOTOPRISM_DISABLE_WEBDAV: "false"             # disables built-in WebDAV server
            PHOTOPRISM_DISABLE_SETTINGS: "false"           # disables Settings in Web UI
            PHOTOPRISM_DISABLE_TENSORFLOW: "false"         # disables all features depending on TensorFlow
            PHOTOPRISM_DISABLE_FACES: "false"              # disables facial recognition
            PHOTOPRISM_DISABLE_CLASSIFICATION: "false"     # disables image classification
            PHOTOPRISM_DARKTABLE_PRESETS: "false"          # enables Darktable presets and disables concurrent RAW conversion
            PHOTOPRISM_DETECT_NSFW: "false"                # flag photos as private that MAY be offensive (requires TensorFlow)
            PHOTOPRISM_UPLOAD_NSFW: "true"                 # allows uploads that MAY be offensive
            PHOTOPRISM_DATABASE_DRIVER: "mysql"            # use MariaDB 10.5+ or MySQL 8+ instead of SQLite for improved performance
            PHOTOPRISM_DATABASE_SERVER: "db:3306"          # MariaDB or MySQL database server (hostname:port)
            PHOTOPRISM_DATABASE_NAME: "{{ service_name }}"         # MariaDB or MySQL database schema name
            PHOTOPRISM_DATABASE_USER: "{{ service_name }}"         # MariaDB or MySQL database user name
            PHOTOPRISM_DATABASE_PASSWORD: "{{ vault_photoprism_database_password }}"       # MariaDB or MySQL database user password
            PHOTOPRISM_SITE_TITLE: "PhotoPrism"
            PHOTOPRISM_SITE_CAPTION: "AI-Powered Photos App"
            PHOTOPRISM_SITE_DESCRIPTION: ""
            PHOTOPRISM_SITE_AUTHOR: ""
            PHOTOPRISM_UID: 1000
            PHOTOPRISM_GID: 1000
            PHOTOPRISM_UMASK: 0000
            HOME: "/photoprism"
          labels:
            - "traefik.enable=true"
            - "traefik.http.routers.photoprism.rule=Host(`{{ service_name }}.{{ hostname }}`)"
            - "traefik.docker.network={{ traefik_network_name }}"
          working_dir: "/photoprism"
          volumes:
            - "{{ service_name }}-app_originals:/photoprism/originals"               # original media files (photos and videos)
            - "{{ service_name }}-app_storage:/photoprism/storage"                  # *writable* storage folder for cache, database, and sidecar files (never remove)
          logging:
            driver: "json-file"
            options:
              max-size: "200k"
              max-file: "10"
          networks:
            - app
            - traefik

        db:
          container_name: "{{ service_name }}-db"
          restart: unless-stopped
          image: mariadb:10.6
          security_opt:
            - seccomp:unconfined
            - apparmor:unconfined
          command: mysqld --innodb-buffer-pool-size=128M --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=120
          volumes:
            - "{{ service_name }}-db_data:/var/lib/mysql"
          environment:
            MYSQL_ROOT_PASSWORD: "{{ vault_photoprism_database_root_password }}"
            MYSQL_DATABASE: "{{ service_name }}"
            MYSQL_USER: "{{ service_name }}"
            MYSQL_PASSWORD: "{{ vault_photoprism_database_password }}"
          logging:
            driver: "json-file"
            options:
              max-size: "200k"
              max-file: "10"
          networks:
            - app

      volumes:
        photoprism-app_storage:
        photoprism-app_originals:
        photoprism-db_data:

      networks:
        app:
        traefik:
          external: true