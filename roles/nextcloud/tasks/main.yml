---
- name: "Make sure {{ service_name }} is running as a container"
  community.docker.docker_compose:
    project_name: "{{ service_name }}"

    definition:
      version: "3.3"

      services:
        nextcloud:
          container_name: "{{ service_name }}-app"
          image: nextcloud:25
          volumes:
            - "{{ nextcloud_dir }}/app/app:/var/www/html"
            - "{{ nextcloud_dir }}/app/data:/var/www/html/data"
            - "{{ nextcloud_dir }}/app/config:/var/www/html/config"
          environment:
            POSTGRES_HOST: db
            POSTGRES_DB: nextcloud
            POSTGRES_USER: nextcloud
            POSTGRES_PASSWORD: "{{ vault_postgres_password }}"
            NEXTCLOUD_TRUSTED_DOMAINS: "{{ service_name }}.{{ public_domain }}"
            NEXTCLOUD_ADMIN_USER: admin
            NEXTCLOUD_ADMIN_PASSWORD: "{{ vault_nextcloud_admin_password }}"
            OVERWRITECLIURL: "{{ service_name }}.{{ public_domain }}"
            OVERWRITEPROTOCOL: https
          restart: unless-stopped
          labels:
            traefik.enable: "true"
            traefik.http.routers.nextcloud.rule: "Host(`{{ service_name }}.{{ public_domain }}`)"
            traefik.docker.network: "{{ traefik_network_name }}"
          networks:
            - app
            - "{{ traefik_network_name }}"

        db:
          image: docker.io/library/postgres:13
          container_name: "{{ service_name }}-db"
          restart: unless-stopped
          volumes:
            - "{{ nextcloud_dir }}/db:/var/lib/postgresql/data"
          environment:
            POSTGRES_DB: nextcloud
            POSTGRES_USER: nextcloud
            POSTGRES_PASSWORD: "{{ vault_postgres_password }}"
          networks:
            - app

      networks:
        app:
        traefik:
          external: true
