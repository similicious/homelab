---
- name: "Make sure {{ service_name }} is running as a container"
  community.docker.docker_compose:
    project_name: "{{ service_name }}"

    definition:
      version: "3.3"

      services:
        nextcloud:
          container_name: "{{ service_name }}-app"
          image: nextcloud:27
          volumes:
            - "{{ nextcloud_app_app_dir }}:/var/www/html"
            - "{{ nextcloud_app_data_dir }}:/var/www/html/data"
            - "{{ nextcloud_app_config_dir }}:/var/www/html/config"
          environment:
            POSTGRES_HOST: db
            POSTGRES_DB: nextcloud
            POSTGRES_USER: nextcloud
            POSTGRES_PASSWORD: "{{ vault_postgres_password }}"
            NEXTCLOUD_TRUSTED_DOMAINS: "{{ service_name }}.{{ public_domain }}"
            NEXTCLOUD_ADMIN_USER: admin
            NEXTCLOUD_ADMIN_PASSWORD: "{{ vault_nextcloud_admin_password }}"
            OVERWRITECLIURL: "{{ service_name }}.{{ public_domain }}"
            OVERWRITEPROTOCOL: https
          restart: unless-stopped
          labels:
            traefik.enable: "true"
            traefik.http.routers.nextcloud.rule: "Host(`{{ service_name }}.{{ public_domain }}`)"
            traefik.docker.network: "{{ traefik_network_name }}"
            traefik.http.routers.nextcloud.middlewares: "nextcloud_redirect_wellknown"
            traefik.http.middlewares.nextcloud_redirect_wellknown.redirectregex.permanent: true
            traefik.http.middlewares.nextcloud_redirect_wellknown.redirectregex.regex: "https://(.*)/.well-known/(?:card|cal)dav"
            traefik.http.middlewares.nextcloud_redirect_wellknown.redirectregex.replacement: "https://$${1}/remote.php/dav"

          networks:
            - app
            - "{{ traefik_network_name }}"

        db:
          image: docker.io/library/postgres:13
          container_name: "{{ service_name }}-db"
          restart: unless-stopped
          volumes:
            - "{{ nextcloud_db_dir }}:/var/lib/postgresql/data"
          environment:
            POSTGRES_DB: nextcloud
            POSTGRES_USER: nextcloud
            POSTGRES_PASSWORD: "{{ vault_postgres_password }}"
          networks:
            - app

        # office:
        #   image: collabora/code
        #   container_name: "{{ service_name }}-collabora"
        #   restart: unless-stopped
        #   environment:
        #     aliasgroup1: "https://{{ service_name }}.{{ public_domain }}:443"
        #   networks:
        #     - "{{ traefik_network_name }}"
        #   labels:
        #     traefik.enable: "true"
        #     traefik.http.routers.collabora.rule: "Host(`collabora.{{ public_domain }}`)"
        #     traefik.docker.network: "{{ traefik_network_name }}"

      networks:
        app:
        traefik:
          external: true

- name: Make sure nextcloud cron job is present
  cron:
    name: nextcloud
    minute: "*/5"
    user: root
    job: "docker exec --user www-data nextcloud-app php -f cron.php > /dev/null 2>&1"
