---
- name: Ensure the config subfolder for monitoring exists
  file:
    path: "{{ docker_service_conf_dir }}/monitoring"
    state: directory
    owner: "{{ rpi_username }}"
    group: "{{ rpi_username }}"

- name: Ensure the monitoring subfolder for prometheus exists
  file:
    path: "{{ docker_service_conf_dir }}/monitoring/prometheus"
    state: directory
    owner: "{{ rpi_username }}"
    group: "{{ rpi_username }}"

- name: Ensure the prometheus config exists
  copy:
    src: prometheus.yml
    dest: "{{ docker_service_conf_dir }}/monitoring/prometheus/prometheus.yml"
    owner: "{{ rpi_username }}"
    group: "{{ rpi_username }}"
  notify: restart_prometheus

- name: Ensure the prometheus monitoring stack is running
  docker_compose:
    project_name: monitoring
    definition:
      version: "3"

      services:
        prometheus:
          image: prom/prometheus
          container_name: prometheus
          volumes:
            - prometheus_data:/etc/prometheus
            - "{{ docker_service_conf_dir }}/monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
          networks:
            - monitoring
          restart: unless-stopped
          logging:
            driver: "json-file"
            options:
              max-size: "200k"
              max-file: "10"

        grafana:
          image: grafana/grafana-oss
          container_name: grafana
          volumes:
            - grafana_data:/var/lib/grafana
          networks:
            - monitoring
            - "{{ traefik_network_name }}"
          labels:
            traefik.enable: "true"
            traefik.http.routers.grafana.rule: "Host(`{{ grafana_subdomain }}.{{ rpi_hostname }}`)"
            traefik.http.services.grafana.loadbalancer.server.port: "3000"
            traefik.docker.network: "{{ traefik_network_name }}"
          restart: unless-stopped
          logging:
            driver: "json-file"
            options:
              max-size: "200k"
              max-file: "10"

        node_exporter:
          image: quay.io/prometheus/node-exporter:latest
          container_name: node_exporter
          command:
            - "--path.rootfs=/host"
          pid: host
          volumes:
            - "/:/host:ro,rslave"
          networks:
            - monitoring
          restart: unless-stopped
          logging:
            driver: "json-file"
            options:
              max-size: "200k"
              max-file: "10"

      volumes:
        prometheus_data:
        grafana_data:

      networks:
        monitoring:
        traefik:
          external: true
