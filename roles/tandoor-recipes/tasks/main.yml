---
- name: Ensure the config directory exists
  file:
    path: "{{ docker_service_conf_dir }}"
    state: directory
    owner: "{{ rpi_username }}"
    group: "{{ rpi_username }}"

- name: "Ensure the config subfolder for {{ service_name }} exists"
  file:
    path: "{{ docker_service_conf_dir }}/{{ service_name }}"
    state: directory
    owner: "{{ rpi_username }}"
    group: "{{ rpi_username }}"

- name: "Ensure the environment file exists"
  template:
    src: .env.j2
    dest: "{{ docker_service_conf_dir }}/{{ service_name }}/.env"
    owner: "{{ rpi_username }}"
    group: "{{ rpi_username }}"

- name: Make sure the network exists
  community.docker.docker_network:
    name: "{{ service_name }}"

- name: Ensure {{ service_name }}_db is running as a container
  community.docker.docker_container:
    name: "{{ service_name }}_db"
    image: postgres:11-alpine
    ports:
      - 5432:5432
    volumes:
      - "{{ service_name }}_db_data:/var/lib/postgresql/data"
    env_file: "{{ docker_service_conf_dir }}/{{ service_name }}/.env"
    networks:
      - name: "{{ service_name }}"
    restart_policy: always
    log_driver: json-file
    log_options:
      max-size: "200k"
      max-file: "10"

- name: Ensure {{ service_name }}_app is running as a container
  community.docker.docker_container:
    name: "{{ service_name }}_app"
    image: vabene1111/recipes
    volumes:
      - "{{ service_name }}_staticfiles:/opt/recipes/staticfiles"
      - "{{ service_name }}_nginx_config:/opt/recipes/nginx/conf.d"
      - "{{ docker_service_conf_dir }}/{{ service_name }}/mediafiles:/opt/recipes/mediafiles"
    env_file: "{{ docker_service_conf_dir }}/{{ service_name }}/.env"
    networks:
      - name: "{{ service_name }}"
        aliases:
          - web_recipes
    restart_policy: always
    log_driver: json-file
    log_options:
      max-size: "200k"
      max-file: "10"

- name: Ensure {{ service_name }}_web is running as a container
  community.docker.docker_container:
    name: "{{ service_name }}_web"
    image: nginx:mainline-alpine
    volumes:
      - "{{ service_name }}_staticfiles:/static"
      - "{{ service_name }}_nginx_config:/etc/nginx/conf.d:ro"
      - "{{ docker_service_conf_dir }}/{{ service_name }}/mediafiles:/media"
    env_file: "{{ docker_service_conf_dir }}/{{ service_name }}/.env"
    networks:
      - name: "{{ service_name }}"
      - name: "{{ traefik_network_name }}"
    labels:
      traefik.enable: "true"
      traefik.http.routers.recipes.rule: "Host(`{{ service_name }}.{{ rpi_hostname }}`)"
    restart_policy: always
    log_driver: json-file
    log_options:
      max-size: "200k"
      max-file: "10"
